%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%											  %%
%%  IRIS: Impedance, Resistive-wall & Instability codes and Scripts			  %%
%%  DELPHI package of codes to compute instabilities due to impedance (with or without damper).			  %% 
%%											  %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Author: Nicolas Mounet, CERN BE/ABP/HSC, Geneva

Last modifications: 28/07/2014

Comments / remarks are welcome and can be sent to nicolo.biancacci@cern.ch
and/or imp-inst@cern.ch


CONTENTS OF THE MANUAL:

1. INTRODUCTION

2. DESCRIPTION OF THE PACKAGE

3. INSTALLATION

   3.1 Prerequisites
   3.2 Installation
   3.3 How to use the codes

4. FUTURE DEVELOPMENTS (TO-DO LIST)



1. INTRODUCTION
   ============

Instabilites in circular machines (synchrotrons, colliders, accelerators, storage rings, etc.)
due to beam-coupling impedance can be a strong limit to their operation.
This package provides a rather self-consistent set of tools to study beam coupling impedances
and their effects in such rings.
The C++ codes DELPHI, ImpedanceWake2D and Laclare are independent from
each other, but the Python codes are at the end of the chain and use most 
of the C++ codes and external libraries provided here (except Laclare).
 

2. DESCRIPTION OF THE PACKAGE
   ==========================

This repository contains various codes and scripts to compute impedance and instabilities, 
written in PYTHON and C++, in particular:

	- DELPHI: C++ code (stand-alone and shared library) to compute eigenfrequencies 
	(tuneshifts and growth rates) of modes for a coupling-impedance/damper system 
	(Vlasov solver), in mode-coupling regime (azimuthal and radial modes considered)
	


	- Laclare: C++ code (stand-alone) to compute eigenfrequencies (tuneshifts and growth 
	rates) from a coupling-impedance alone, in weak headtail (low intensity) regime,
	using Laclare formalism (see J. L. Laclare, "Bunched Beam Coherent Instabilities", 
	CERN-87-03-V-1, p. 264, 1987).


	- PYTHON_codes_and_scripts: many Python codes and scripts:
	
		* General_Python_tools: Some general purpose python modules used in many of the functions and 
		scripts here,
		
		* DELPHI_Python: DELPHI python library: library to compute instabilities for a 
		coupling-impedance/damper system (wrapper of DELPHI) (also contains a wrapper 
		for the MOSES code of Y. Chin, and several other functions),
		

3. INSTALLATION AND USE
   ====================
   
   The package was tested on Linux machines only (lxplus at CERN, in 2014, and 
   Ubuntu 10.04 & 12.04).
   
   For other operating systems, the user is welcome to share his/her installation experience 
   by sending an email to imp-inst@cern.ch
        
   
   3.1 Prerequisites
       -------------
       
       - python 2.6 or 2.7 (other versions - in particular more recent - were not tested).
       - g++ and gcc compilers, with standard C++ libraries. Other compilers have not
       tried, but the user is welcome to share his/her experience with other compilers by sending
       an email to imp-inst@cern.ch
       
	
   3.2 Installation
       -----------
       
       To download toe the CERN GIT repository, install GIT ("sudo apt-get install git-core"
       under Ubuntu) and do
       git clone https://nmounet@git.cern.ch/kerberos/IRIS
       or
       git clone https://nmounet@git.cern.ch/reps/IRIS
       (the former requires MIT Kerberos to be installed, most probably).
       This creates a directory IRIS in the current directory, with the full package in it.
       
       
       NOTE: at several places the 'bash' shell is assumed (in particular all Python scripts
       use environment variables defined in the ~/.bashrc file). If you are using another shell,
       then either
        - adapt the installation procedure to use this shell (you need to change only a few
        'script_configure_bashrc.sh' files in the various directories),
	- or change to the bash shell each time you use the codes here (typing 'bash' in the terminal),
        - or, for lxplus at CERN you can change your default shell to 'bash' by going to
       	https://account.cern.ch/account/Management/MyAccounts.aspx
	then click on
	Services -> LXPLUS and Linux -> Settings
       
       
       Each part of the package has its own installation procedure: 
       
	- DELPHI: follow the instructions in DELPHI/DELPHI_user_manual.txt
		
	- Laclare: follow the instructions in Laclare/Laclare_user_manual.txt


		* DELPHI_Python: 
			~ you need to have installed DELPHI first as well as General_Python_tools (see above)
			~ to be able to use the DELPHI encapsulating functions with lxplusbatch='launch' or 'retrieve'
			(i.e. to launch parallel jobs on a cluster - typically lxplus at CERN), you need
			to have the LSF batch system installed (this is the case on lxplus at CERN),
			with typical commands "bsub", "bjobs", etc.
			Otherwise you can still use these routines but sequentially, with lxplusbatch=None.
			~ you need to add the path to this directory to your PYTHONPATH and to your PATH.
			The simplest is to modify your .bashrc file, typing in a terminal
			
			    cd PYTHON_codes_and_scripts/DELPHI_Python
			    ./script_configure_bashrc.sh


4. WORK IN PROGRESS
   ================

- Getting the DELPHI time domain signal from pick-up (as in Laclare) to get hint of the unstable radial mode number.
	
